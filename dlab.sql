SELECT COUNT(PARK_CODE) FROM ATTRACTION;

SELECT COUNT(DISTINCT (PARK_CODE )) FROM ATTRACTION;

SELECT COUNT(DISTINCT (EMP_NUM)) AS "Number of Employees" FROM HOURS;

SELECT COUNT(*) FROM ATTRACTION;

SELECT COUNT(ATTRACT_NAME) FROM ATTRACTION;

MIN(TICKET_PRICE),max(TICKET_PRICE) FROM TICKET;

SELECT AVG(LINE_PRICE), SUM(LINE_QTY) FROM SALES_LINE;

SELECT PARK_CODE, MIN(TICKET_PRICE),MAX(TICKET_PRICE) FROM TICKET GROUP BY PARK_CODE;

SELECT PARK_CODE, MIN(TICKET_PRICE),MAX(TICKET_PRICE) FROM TICKET PARK_CODE;

SELECT PARK_CODE, AVG(TICKET_PRICE) FROM TICKET GROUP BY PARK_CODE HAVING AVG(TICKET_PRICE) >= 24.99;

SELECT THEMEPARK.PARK_CODE, PARK_NAME, TICKET_NO, TICKET_TYPE, TICKET_PRICE FROM THEMEPARK, TICKET WHERE THEMEPARK.PARK_CODE = TICKET.PARK_CODE;

SELECT THEMEPARK.PARK_CODE, PARK_NAME, ATTRACT_NAME,

ATTRACT_CAPACITY FROM THEMEPARK, ATTRACTION WHERE THEMEPARK.PARK_CODE = ATTRACTION.PARK_CODE;

ATTRACT_CAPACITY FROM THEMEPARK, ATTRACTION WHERE PARK_CODE = ATTRACTION.PARK_CODE;

SELECT P.PARK_CODE, PARK_NAME, TICKET_NO, TICKET_TYPE, TICKET_PRICE FROM THEMEPARK P, TICKET T WHERE P.PARK_CODE =T.PARK_CODE;

SELECT * FROM SALES CROSS JOIN SALES_LINE;

SELECT TRANSACTION_NO, SALE_DATE, LINE_NO, LINE_QTY, LINE_PRICE FROM SALES NATURAL JOIN SALES_LINE;

SELECT TRANSACTION_NO, SALE_DATE, LINE_NO, LINE_QTY, LINE_PRICE FROM SALES JOIN SALES_LINE USING (TRANSACTION_NO);

SELECT SALES.TRANSACTION_NO, SALE_DATE, LINE_NO, LINE_QTY, LINE_PRICE FROM SALES JOIN SALES_LINE ON SALES.TRANSACTION_NO = SALES_LINE.TRANSACTION_NO;

SELECT THEMEPARK.PARK_CODE, PARK_NAME, ATTRACT_NAME FROM THEMEPARK LEFT JOIN ATTRACTION ON THEMEPARK.PARK_CODE = ATTRACTION.PARK_CODE;

SELECT THEMEPARK.PARK_CODE, PARK_NAME, ATTRACT_NAME FROM THEMEPARK RIGHT JOIN ATTRACTION ON THEMEPARK.PARK_CODE = ATTRACTION.PARK_CODE;